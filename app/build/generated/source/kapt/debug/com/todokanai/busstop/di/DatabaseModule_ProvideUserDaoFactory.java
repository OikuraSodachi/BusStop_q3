// Generated by Dagger (https://dagger.dev).
package com.todokanai.busstop.di;

import com.todokanai.busstop.room.MyDatabase;
import com.todokanai.busstop.room.UserDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideUserDaoFactory implements Factory<UserDao> {
  private final DatabaseModule module;

  private final Provider<MyDatabase> myDatabaseProvider;

  public DatabaseModule_ProvideUserDaoFactory(DatabaseModule module,
      Provider<MyDatabase> myDatabaseProvider) {
    this.module = module;
    this.myDatabaseProvider = myDatabaseProvider;
  }

  @Override
  public UserDao get() {
    return provideUserDao(module, myDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideUserDaoFactory create(DatabaseModule module,
      Provider<MyDatabase> myDatabaseProvider) {
    return new DatabaseModule_ProvideUserDaoFactory(module, myDatabaseProvider);
  }

  public static UserDao provideUserDao(DatabaseModule instance, MyDatabase myDatabase) {
    return Preconditions.checkNotNullFromProvides(instance.provideUserDao(myDatabase));
  }
}
