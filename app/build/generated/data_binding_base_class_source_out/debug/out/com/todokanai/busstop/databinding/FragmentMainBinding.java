// Generated by data binding compiler. Do not edit!
package com.todokanai.busstop.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.todokanai.busstop.R;
import com.todokanai.busstop.fragment.MainFragment;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentMainBinding extends ViewDataBinding {
  @NonNull
  public final Button busBtn;

  @NonNull
  public final ConstraintLayout frameLayout2;

  @NonNull
  public final Button gitBtn;

  @NonNull
  public final TextInputEditText inputLong;

  @NonNull
  public final TextInputEditText inputString;

  @NonNull
  public final Button mapBtn;

  @NonNull
  public final TextInputLayout textInputLayout;

  @NonNull
  public final TextInputLayout textInputLayout2;

  @Bindable
  protected MainFragment mMainFragment;

  protected FragmentMainBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button busBtn, ConstraintLayout frameLayout2, Button gitBtn, TextInputEditText inputLong,
      TextInputEditText inputString, Button mapBtn, TextInputLayout textInputLayout,
      TextInputLayout textInputLayout2) {
    super(_bindingComponent, _root, _localFieldCount);
    this.busBtn = busBtn;
    this.frameLayout2 = frameLayout2;
    this.gitBtn = gitBtn;
    this.inputLong = inputLong;
    this.inputString = inputString;
    this.mapBtn = mapBtn;
    this.textInputLayout = textInputLayout;
    this.textInputLayout2 = textInputLayout2;
  }

  public abstract void setMainFragment(@Nullable MainFragment MainFragment);

  @Nullable
  public MainFragment getMainFragment() {
    return mMainFragment;
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentMainBinding>inflateInternal(inflater, R.layout.fragment_main, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_main, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentMainBinding>inflateInternal(inflater, R.layout.fragment_main, null, false, component);
  }

  public static FragmentMainBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentMainBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentMainBinding)bind(component, view, R.layout.fragment_main);
  }
}
